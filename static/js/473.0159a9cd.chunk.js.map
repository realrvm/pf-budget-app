{"version":3,"file":"static/js/473.0159a9cd.chunk.js","mappings":"gPAmGA,EA7Ee,WAEX,OAAoDA,EAAAA,EAAAA,WAAS,GAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAAsDF,EAAAA,EAAAA,WAAS,GAA/D,eAAOG,EAAP,KAA4BC,EAA5B,KACA,GAA0DJ,EAAAA,EAAAA,WAAS,GAAnE,eAAOK,EAAP,KAA8BC,EAA9B,KAEA,GAAgEN,EAAAA,EAAAA,UAAS,IAAzE,eAAOO,EAAP,KAAiCC,EAAjC,KACA,GAAkER,EAAAA,EAAAA,UAAS,IAA3E,eAAOS,EAAP,KAAkCC,EAAlC,KAYA,GAAgCC,EAAAA,EAAAA,KAAxBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAEjB,OACI,iCACI,UAACC,EAAA,EAAD,CAAWC,UAAU,OAArB,WACI,SAAC,KAAD,CAAMC,GAAG,IAAT,qGACA,UAACC,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAGJ,UAAU,OAAhD,WACI,eAAIA,UAAU,UAAd,mDACA,SAACK,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMpB,GAAsB,IAA/D,qEAGA,SAACkB,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBAAMlB,GAAuB,IAAxE,yDAGA,SAACgB,EAAA,EAAD,CAAQC,QAAQ,iBAAiBC,QAAS,kBAAMhB,GAAyB,IAAzE,+EAIJ,iBAAKS,UAAU,cAAf,UACKH,EAAQW,KAAI,SAACC,GACV,IAAQC,EAAkBD,EAAlBC,GAAIC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IACZC,EAASf,EAAWY,GAAII,QAAO,SAACC,EAAKC,GACvC,YAAuBC,IAAnBD,EAAQH,OAA6B,EAClCE,EAAMC,EAAQH,SACtB,GACH,OACI,SAAC,KAAD,CAEIF,KAAMA,EACNE,OAAQA,EACRD,IAAKA,EACLM,kBAAmB,kBAzCrBC,EAyC4CT,EAxClErB,GAAuB,QACvBI,EAA4B0B,GAFP,IAACA,GA0CEC,mBAAoB,kBAAMzB,EAA6Be,KALlDA,OASjB,SAAC,KAAD,CACIQ,kBA1CY,WAC5B7B,GAAuB,IA0CP+B,mBAAoB,kBAAMzB,EAA6B0B,EAAAA,QAE3D,SAAC,KAAD,WAGR,SAAC,KAAD,CAAgBC,KAAMpC,EAAoBqC,YAAa,kBAAMpC,GAAsB,OACnF,SAAC,KAAD,CAAmBmC,KAAMhC,EAAuBiC,YAAa,kBAAMhC,GAAyB,OAC5F,SAAC,KAAD,CACI+B,KAAMlC,EACNmC,YAAa,kBAAMlC,GAAuB,IAC1CmC,iBAAkBhC,KAEtB,SAAC,KAAD,CACI2B,UAAWzB,EACX6B,YAAa,kBAAM5B,EAA6B","sources":["pages/budget/Budget.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n    BudgetCard,\n    AddBudgetModal,\n    AddExpenseModal,\n    ViewExpenseModal,\n    TotalBudgetCard,\n    DefaultBudgetCard,\n    ConfirmationModal,\n} from \"../../components\";\n\nimport { useAppContext } from \"../../hooks/useAppContext\";\n\nimport { Container, Stack, Button } from \"react-bootstrap\";\n\nimport { DEFAULT_ID } from \"../../utils/utils\";\n\nimport \"./Budget.css\";\n\nconst Budget = () => {\n    // модалки для меню\n    const [showAddBudgetModal, setShowAddBudgetModal] = useState(false);\n    const [showAddExpenseModal, setShowAddExpenseModal] = useState(false);\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n    // модалки для карточки затрат\n    const [addExpenseModalCurrentId, setAddExpenseModalCurrentId] = useState(\"\");\n    const [viewExpenseModalCurrentId, setViewExpenseModalCurrentId] = useState(\"\");\n\n    const openExpenseModal = (currentId: string) => {\n        setShowAddExpenseModal(true);\n        setAddExpenseModalCurrentId(currentId);\n    };\n\n    const openExpenseModalDefault = () => {\n        setShowAddExpenseModal(true);\n    };\n\n    // использование контекста\n    const { budgets, getExpense } = useAppContext();\n\n    return (\n        <>\n            <Container className=\"my-4\">\n                <Link to=\"/\">Назад на главную</Link>\n                <Stack direction=\"horizontal\" gap={2} className=\"mb-4\">\n                    <h1 className=\"me-auto\">Бюджет</h1>\n                    <Button variant=\"primary\" onClick={() => setShowAddBudgetModal(true)}>\n                        Категория\n                    </Button>\n                    <Button variant=\"outline-primary\" onClick={() => setShowAddExpenseModal(true)}>\n                        Расходы\n                    </Button>\n                    <Button variant=\"outline-danger\" onClick={() => setShowConfirmationModal(true)}>\n                        Удалить всё\n                    </Button>\n                </Stack>\n                <div className=\"app-content\">\n                    {budgets.map((budget) => {\n                        const { id, name, max } = budget;\n                        const amount = getExpense(id).reduce((acc, expense) => {\n                            if (expense.amount === undefined) return 0;\n                            return acc + expense.amount;\n                        }, 0);\n                        return (\n                            <BudgetCard\n                                key={id}\n                                name={name}\n                                amount={amount}\n                                max={max}\n                                onAddExpenseClick={() => openExpenseModal(id)}\n                                onViewExpenseClick={() => setViewExpenseModalCurrentId(id)}\n                            />\n                        );\n                    })}\n                    <DefaultBudgetCard\n                        onAddExpenseClick={openExpenseModalDefault}\n                        onViewExpenseClick={() => setViewExpenseModalCurrentId(DEFAULT_ID)}\n                    />\n                    <TotalBudgetCard />\n                </div>\n            </Container>\n            <AddBudgetModal show={showAddBudgetModal} handleClose={() => setShowAddBudgetModal(false)} />\n            <ConfirmationModal show={showConfirmationModal} handleClose={() => setShowConfirmationModal(false)} />\n            <AddExpenseModal\n                show={showAddExpenseModal}\n                handleClose={() => setShowAddExpenseModal(false)}\n                defaultCurrentId={addExpenseModalCurrentId}\n            />\n            <ViewExpenseModal\n                currentId={viewExpenseModalCurrentId}\n                handleClose={() => setViewExpenseModalCurrentId(\"\")}\n            />\n        </>\n    );\n};\n\nexport default Budget;\n"],"names":["useState","showAddBudgetModal","setShowAddBudgetModal","showAddExpenseModal","setShowAddExpenseModal","showConfirmationModal","setShowConfirmationModal","addExpenseModalCurrentId","setAddExpenseModalCurrentId","viewExpenseModalCurrentId","setViewExpenseModalCurrentId","useAppContext","budgets","getExpense","Container","className","to","Stack","direction","gap","Button","variant","onClick","map","budget","id","name","max","amount","reduce","acc","expense","undefined","onAddExpenseClick","currentId","onViewExpenseClick","DEFAULT_ID","show","handleClose","defaultCurrentId"],"sourceRoot":""}